spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/danran_miaosha?userSSL=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password:
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxActive: 30
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接.
    minEvictableIdleTimeMillis: 300000  #配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false  #获取连接时执行检测，建议关闭，影响性能
    testOnReturn: false  #归还连接时执行检测，建议关闭，影响性能
    poolPreparedStatements: true  #是否开启PSCache，PSCache对支持游标的数据库性能提升巨大,
    # oracle建议开启，mysql下建议关闭
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j     #stat:监控统计  log4j:日志  wall:防御sql注入
    maxPoolPreparedStatementPerConnectionSize: 20   #开启poolPreparedStatements后生效
    useGlobalDataSourceStat: true
    #通过connectProperties属性来打开mergeSql功能;慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  redis:
    database: 0   # Redis数据库索引，默认为0
    host: 127.0.0.1 # Redis服务器地址
    port: 6379 # Redis的端口
    password:
    jedis:
      pool:
        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 300 # 连接超时时间（毫秒）

mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
server:
  port: 8080
  servlet:
    context-path: /